params {
    // Input options
    raw_data            = null
    index_file          = null
    plate_file          = null
    metadata            = null
    ulimit              = 10000
    outdir              = null
    bind_dir            = null
    assays              = null

    tracedir            = "${params.outdir}/pipeline_info"
    publish_dir_mode    = 'copy'
}

docker {
    enabled         = true
    userEmulation   = true
    runOptions      = "-v ${params.bind_dir}:${params.bind_dir} -u \$(id -u $USER):\$(id -g $USER)"
}

env {
    PYTHONNOUSERSITE = 1
    R_PROFILE_USER   = "/.Rprofile"
    R_ENVIRON_USER   = "/.Renviron"
    JULIA_DEPOT_PATH = "/usr/local/share/julia"
}

// Capture exit codes from upstream processes when piping
process.shell = ['/bin/bash', '-euo', 'pipefail']

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.tracedir}/pipeline_dag_${trace_timestamp}.html"
}

process {
    cpus   = 128
    memory = 128.GB

    withName: CREATE_DEMUX_DEPENDENCIES {
        publishDir = [
            path: { "${params.outdir}/demux_dependencies" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: CREATE_INDEX_FILE {
        publishDir = [
            path: { "${params.outdir}/index_file" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: CREATE_SAMPLESHEET {
        publishDir = [
            path: { "${params.outdir}/samplesheets" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: CUTADAPT {
        publishDir = [
            path: { "${params.outdir}/cutadapt" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: RENAME {
        publishDir = [
            path: { "${params.outdir}/renamed_fqs" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: RAW_STATS {
        publishDir = [
            path: { "${params.outdir}/seqkit_stats" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: ASSIGNED_STATS {
        publishDir = [
            path: { "${params.outdir}/seqkit_stats" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: UNKNOWN_STATS {
        publishDir = [
            path: { "${params.outdir}/seqkit_stats" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: UNNAMED_STATS {
        publishDir = [
            path: { "${params.outdir}/seqkit_stats" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: FINAL_STATS {
        publishDir = [
            path: { "${params.outdir}/seqkit_stats" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: TRIM_AND_CONCAT {
        publishDir = [
            path: { "${params.outdir}/concat_fqs" },
            mode: params.publish_dir_mode,
        ]
    }
    withName: VALIDATE_INPUT {
        publishDir = [
            path: { "${params.outdir}/valid_input" },
            mode: params.publish_dir_mode,
        ]
    }
}